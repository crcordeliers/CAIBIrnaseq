[{"path":[]},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/installation.html","id":"r-version","dir":"Articles","previous_headings":"System setup","what":"R version","title":"Installation of CAIBIrnaseq","text":"package available R version 4.1.0. Verify version :","code":"version"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/installation.html","id":"system-dependencies","dir":"Articles","previous_headings":"System setup","what":"System dependencies","title":"Installation of CAIBIrnaseq","text":"systems, command lines run Terminal system dependencies install correctly package.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/installation.html","id":"linux-ubuntudebian","dir":"Articles","previous_headings":"System setup > System dependencies","what":"Linux Ubuntu/Debian","title":"Installation of CAIBIrnaseq","text":"","code":"# Upgrade of the system sudo apt update && sudo apt upgrade -y  # System dependencies sudo apt install -y r-base r-base-dev libcurl4-openssl-dev libssl-dev libxml2-dev libgit2-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev build-essential zlib1g-dev pandoc git"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/installation.html","id":"macos","dir":"Articles","previous_headings":"System setup > System dependencies","what":"MacOS","title":"Installation of CAIBIrnaseq","text":"","code":"# If not already done, install Homebrew /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"  # System dependencies  brew install libgit2 pkg-config freetype harfbuzz fribidi libpng libtiff jpeg pandoc git"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/installation.html","id":"windows","dir":"Articles","previous_headings":"System setup > System dependencies","what":"Windows","title":"Installation of CAIBIrnaseq","text":"Windows, must install Rtools (https://cran.r-project.org/bin/windows/Rtools/). , restart Rstudio verify Rtools installed :","code":"# In R Console pkgbuild::has_build_tools(debug = TRUE)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/installation.html","id":"packages-to-install-before-caibirnaseq","dir":"Articles","previous_headings":"","what":"Packages to install before CAIBIrnaseq","title":"Installation of CAIBIrnaseq","text":"install CAIBIrnaseq package GitHub, install 2 basic packages: devtools allows us install package Github BiocManager install Bioconductor dependencies.","code":"# If not already installed install.packages(\"devtools\") install.packages(\"BiocManager\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/installation.html","id":"installation-of-caibirnaseq","dir":"Articles","previous_headings":"","what":"Installation of CAIBIrnaseq","title":"Installation of CAIBIrnaseq","text":"Now, ready install package ! Just run line : lot packages, installation might take bit time… done, verify package installed correctly : encounter errors, ’re DONE ! Hope package help projects !!!","code":"# Installation from Github :  devtools::install_github(\"crcordeliers/CAIBIrnaseq\", dependencies = TRUE) library(CAIBIrnaseq)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/installation.html","id":"issues","dir":"Articles","previous_headings":"","what":"Issues","title":"Installation of CAIBIrnaseq","text":"lot packages, encounter difficulties install package. Normally, installation devtools BiocManager enough, missing packages, hesitate install manually missing ones. might difficulties DESeq2 SummarizedExperiment packages. Just try running command lines : errors persist, check system dependencies write permissions folder libraries installed.","code":"# Manual installation BiocManager::install(\"DESeq2\") BiocManager::install(\"SummarizedExperiment\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/sup_rnaseq.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load data","title":"Unsupervised RNA-seq analysis","text":"section loads RNA-seq dataset analysis. ensures correct input file used, specified parameters. rebase_gexp Next cell airway dataset. goal match names variables used package names dataset.","code":"data(airway, package=\"airway\") exp_data <- airway rowData(exp_data)$gene_length_kb <-    (rowData(exp_data)$gene_seq_end - rowData(exp_data)$gene_seq_start) / 1000  library(biomaRt)  # Initialiser biomaRt pour Ensembl humain mart <- useMart(\"ensembl\", dataset = \"hsapiens_gene_ensembl\")  # Obtenir les descriptions basées sur les gene_id gene_ids <- rowData(exp_data)$gene_id  annot <- getBM(attributes = c(\"ensembl_gene_id\", \"description\"),                filters = \"ensembl_gene_id\",                values = gene_ids,                mart = mart)  # Faire correspondre les descriptions aux lignes de rowData matched <- match(rowData(exp_data)$gene_id, annot$ensembl_gene_id) rowData(exp_data)$gene_description <- annot$description[matched]"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/sup_rnaseq.html","id":"pre-processing","dir":"Articles","previous_headings":"","what":"Pre-processing","title":"Unsupervised RNA-seq analysis","text":"datasets use ensembl gene ID default alignment, step rebases expression data gene names. ensures consistency naming downstream analyses.","code":"exp_data <- rebase_gexp(exp_data, annotation = \"gene_name\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/sup_rnaseq.html","id":"filter","dir":"Articles","previous_headings":"Pre-processing","what":"Filter","title":"Unsupervised RNA-seq analysis","text":", filter genes expressed samples low counts. removes noise data focuses meaningful gene expressions. Visualization filtering process ensure criteria applied align dataset’s characteristics:","code":"exp_data <- filter_gexp(exp_data,                         min_nsamp = 1,                          min_counts = 1) ## - Keeping 33026/56638 genes found in at least 1 sample(s) with at least 1 counts colData(exp_data)$sample_id <- colnames(exp_data)  plot_qc_filters(exp_data) ## Warning: Removed 8 rows containing missing values or values outside the scale range ## (`geom_text_repel()`). ## Warning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomTextRepel() has yet to be implemented in plotly. ##   If you'd like to see this geom implemented, ##   Please open an issue with your example code at ##   https://github.com/ropensci/plotly/issues"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/sup_rnaseq.html","id":"normalize","dir":"Articles","previous_headings":"Pre-processing","what":"Normalize","title":"Unsupervised RNA-seq analysis","text":", apply normalization expression data, making samples comparable reducing variability due technical differences. datasets samples, rlog preferred normalization samples present, vst applied.","code":"exp_data <- normalize_gexp(exp_data)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/sup_rnaseq.html","id":"pca","dir":"Articles","previous_headings":"","what":"PCA","title":"Unsupervised RNA-seq analysis","text":"Principal component analysis (PCA) identifies major patterns dataset. patterns help explore similarities differences among samples based gene expression.","code":"heatmap_genes <- list(   DNA_repair = c(\"BRCA1\", \"BRCA2\", \"ATM\", \"ATR\", \"CHEK1\", \"CHEK2\", \"RAD51\", \"XRCC1\"),   Metabolism = c(\"ACLY\", \"ACACA\", \"FASN\", \"G6PD\", \"HK2\", \"LDHA\", \"PDK1\"),   Cell_Cycle = c(\"CDK1\", \"CDK2\", \"CCND1\", \"CCNE1\", \"RB1\", \"TP53\", \"E2F1\") ) S4Vectors::metadata(exp_data)[[\"pca_res\"]] <- pca_gexp(exp_data) annotations <- setdiff(annotation, c(\"exp_cluster\", \"path_cluster\")) plot_pca(exp_data, color = annotation)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/sup_rnaseq.html","id":"diffexp","dir":"Articles","previous_headings":"","what":"Diffexp","title":"Unsupervised RNA-seq analysis","text":"Diffexp Filtering generate heatmap  ##Volcano plot","code":"diffexp <- diffExpAnalysis(countData = assays(exp_data)$counts,                                           sampleInfo = colData(exp_data),                                           method = diffexpMethod, cutoff = 10,                                           annotation = annotation) if(tolower(diffexpMethod) == \"limma\"){   diffexp <- diffexp |>     rename(       log2FoldChange = logFC,       pvalue = P.Value,       padj = adj.P.Val     ) } diffexp_filtered <- diffexp |>     dplyr::filter(padj <= 0.05) |>     dplyr::arrange(padj)  # Select top 50 differentially expressed genes top_de_genes <- rownames(diffexp_filtered)[1:30] hm <- plot_exp_heatmap(exp_data,  genes = top_de_genes,                   annotations = annotation,                  show_rownames = TRUE,                  hm_color_limits = c(-2,2),                  show_dend_row = FALSE,                  fname = \"results/clustering/heatmap_2000hvg_exp_cluster.pdf\") hm volcano_plot <- plot_exp_volcano(diffexp) volcano_plot ## Warning: Removed 3943 rows containing missing values or values outside the scale range ## (`geom_point()`). ## Warning: Removed 22297 rows containing missing values or values outside the scale range ## (`geom_text_repel()`). volcano_plot + ggplot2::coord_flip() ## Warning: Removed 3943 rows containing missing values or values outside the scale range ## (`geom_point()`). ## Warning: Removed 22297 rows containing missing values or values outside the scale range ## (`geom_text_repel()`)."},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/sup_rnaseq.html","id":"pathway-analysis","dir":"Articles","previous_headings":"","what":"Pathway analysis","title":"Unsupervised RNA-seq analysis","text":"“SRR1039508” “SRR1039509” “SRR1039512” “SRR1039513” “SRR1039516” [6] “SRR1039517” “SRR1039520” “SRR1039521”","code":"msigdbr::msigdbr_collections() |> kableExtra::kbl() |> kableExtra::kable_styling() |> kableExtra::scroll_box(height = \"300px\") pathways <- get_annotation_collection(collections,                                        species = species)  pathwayResult <- pathwayAnalysis(diffexp_filtered,                               pathways = pathways,                               method = pathwayMethod, species = species) |> as.data.frame() ## Warning in preparePathwaysAndStats(pathways, stats, minSize, maxSize, gseaParam, : There are ties in the preranked stats (0.07% of the list). ## The order of those tied genes will be arbitrary, which may produce unexpected results. rownames(pathwayResult) <- pathwayResult$pathway S4Vectors::metadata(exp_data)[[\"pathwayEnrichment\"]] <- pathwayResult pathwayDotplot <- plot_pathway_dotplot(exp_data, score_name = \"pathwayEnrichment\") pathwayDotplot hms <- lapply(1:length(heatmap_genes), function(i) {   genes <- heatmap_genes[[i]]   name <- ifelse(is.null(names(heatmap_genes)), i, names(heatmap_genes)[i])   hm <- plot_exp_heatmap(exp_data, genes = genes,                     annotations = annotation,                    show_rownames = ifelse(length(genes) <= 100, TRUE, FALSE),                    hm_color_limits = c(-2,2),                    show_dend_row = FALSE,                    fname = stringr::str_glue(\"results/targeted/hm_genes_{i}.pdf\")) }) patchwork::wrap_plots(hms, ncol = 2, guides = \"collect\") dir.create(\"results/targeted/boxplots\", recursive = TRUE, showWarnings = FALSE) pathway_scores <- score_pathways(exp_data, pathways, verbose = FALSE) S4Vectors::metadata(exp_data)[[\"pathway_scores\"]] <- pathway_scores  boxplots <- lapply(heatmap_pathways, function(path) {   lapply(annotation, function(annotation) {     plt <- plot_path_boxplot(exp_data,                               pathway = path,                    annotation = annotation,                     color_var = annotation,                     pt_size = 2,                    fname = stringr::str_glue(\"results/targeted/boxplots/box_{path}_{annotation}.pdf\"))   }) }) |> purrr::flatten() patchwork::wrap_plots(boxplots, nrows = round(length(boxplots)/2), guides = \"collect\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load data","title":"Unsupervised RNA-seq analysis","text":"section loads RNA-seq dataset analysis. ensures correct input file used, specified parameters. rebase_gexp Next cell airway dataset. goal match names variables used package names dataset.","code":"data(airway, package=\"airway\") exp_data <- airway library(biomaRt)  rowData(exp_data)$gene_length_kb <-    (rowData(exp_data)$gene_seq_end - rowData(exp_data)$gene_seq_start) / 1000  mart <- useMart(\"ensembl\", dataset = \"hsapiens_gene_ensembl\") gene_ids <- rowData(exp_data)$gene_id  annot <- getBM(attributes = c(\"ensembl_gene_id\", \"description\"),                filters = \"ensembl_gene_id\",                values = gene_ids,                mart = mart)  matched <- match(rowData(exp_data)$gene_id, annot$ensembl_gene_id) rowData(exp_data)$gene_description <- annot$description[matched]"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"pre-processing","dir":"Articles","previous_headings":"","what":"Pre-processing","title":"Unsupervised RNA-seq analysis","text":"datasets use ensembl gene ID default alignment, step rebases expression data gene names. ensures consistency naming downstream analyses.","code":"exp_data <- rebase_gexp(exp_data, annotation = \"gene_name\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"filter","dir":"Articles","previous_headings":"Pre-processing","what":"Filter","title":"Unsupervised RNA-seq analysis","text":", filter genes expressed samples low counts. removes noise data focuses meaningful gene expressions. Visualization filtering process ensure criteria applied align dataset’s characteristics:","code":"exp_data <- filter_gexp(exp_data,                         min_nsamp = 1,                          min_counts = 1) colData(exp_data)$sample_id <- colnames(exp_data) plot_qc_filters(exp_data) ## Warning: Removed 8 rows containing missing values or values outside the scale range ## (`geom_text_repel()`). ## Warning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomTextRepel() has yet to be implemented in plotly. ##   If you'd like to see this geom implemented, ##   Please open an issue with your example code at ##   https://github.com/ropensci/plotly/issues"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"normalize","dir":"Articles","previous_headings":"Pre-processing","what":"Normalize","title":"Unsupervised RNA-seq analysis","text":", apply normalization expression data, making samples comparable reducing variability due technical differences. datasets samples, rlog preferred normalization samples present, vst applied.","code":"exp_data <- normalize_gexp(exp_data)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"pca","dir":"Articles","previous_headings":"","what":"PCA","title":"Unsupervised RNA-seq analysis","text":"Principal component analysis (PCA) identifies major patterns dataset. patterns help explore similarities differences among samples based gene expression. want add circular/oval shape circle different genotypes samples, use fviz_pca_ind function factoextra package. dataset, relevant can persona dataset.","code":"pca_res = pca_gexp(exp_data) exp_data@metadata[[\"pca_res\"]] <- pca_res  annotations <- setdiff(plot_annotations, c(\"exp_cluster\", \"path_cluster\")) plot_pca(exp_data, color = plot_annotations) library(factoextra) ## Loading required package: ggplot2 ## Welcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa groups <- SummarizedExperiment::colData(exp_data)$dex  # here we want to split in function of `treated` and `untreated`  fviz_pca_ind(pca_res,              geom = \"point\",              habillage = groups,              palette = c(\"#00AFBB\", \"#E7B800\"),  # Personalized colors              addEllipses = TRUE,              ellipse.type = \"confidence\",              repel = TRUE,              label = \"none\" )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"unsupervised-clustering","dir":"Articles","previous_headings":"","what":"Unsupervised clustering","title":"Unsupervised RNA-seq analysis","text":", group samples based expression patterns without prior knowledge using hierarchical clustering either selected gene list parameters , default, 2000 highly expressed genes. can useful discovering sample subgroups new biological insights. Visual representation expression levels HVG across clusters, highlighting distinct patterns.","code":"exp_data <- cluster_exp(exp_data, k = exp_cluster$k, genes = exp_cluster$genes, n_pcs = 3) hvg <- highly_variable_genes(exp_data) exp_cluster <- data.frame(k = 2) hm <- plot_exp_heatmap(exp_data,  genes = hvg,                   annotations = c(plot_annotations, \"exp_cluster\"),                  show_rownames = FALSE,                  hm_color_limits = c(-2,2),                  fname = \"results/clustering/heatmap_2000hvg_exp_cluster.pdf\") hm"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"pathway-activity","dir":"Articles","previous_headings":"","what":"Pathway activity","title":"Unsupervised RNA-seq analysis","text":"Pathway analysis enables us understand functional implications gene expression changes. , analyze dataset pathway activity using two methods.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"progeny","dir":"Articles","previous_headings":"Pathway activity","what":"PROGENy","title":"Unsupervised RNA-seq analysis","text":"PROGENy collection 14 core pathway responsive genes large signaling perturbation experiments. information see original paper.","code":"progeny_scores <- score_progeny(exp_data, species = \"Homo sapiens\")  tmp <- S4Vectors::metadata(exp_data)          tmp[[\"progeny_scores\"]] <- progeny_scores   S4Vectors::metadata(exp_data) <- tmp    plot_progeny_heatmap(exp_data, annotations = plot_annotations,                      fname = \"results/pathways/hm_progeny_scores.pdf\") ## Warning in prep_scores_hm(exp_data, progeny_scores): 'sample_id' already exists ## in colData and will be overwritten. write.csv(progeny_scores, file = \"results/pathways/progeny_scores.csv\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"pathways","dir":"Articles","previous_headings":"Pathway activity","what":"Pathways","title":"Unsupervised RNA-seq analysis","text":"Pathway collections available MSIGdb can specified parameters. pathways scored ranked variance data. available collections (use gs_subcollection name except Hallmarks, ‘H’).","code":"library(msigdbr) library(dplyr) library(kableExtra)   msigdbr::msigdbr_collections() |>   kableExtra::kbl() |>   kableExtra::kable_styling() |>   kableExtra::scroll_box(height = \"300px\") pathways <- get_annotation_collection(pathway_collections,                                        species = species) ## Warning in FUN(X[[i]], ...): Collection `H` not found in MSigDB. Skipping. pathway_scores <- score_pathways(exp_data, pathways, verbose = FALSE) S4Vectors::metadata(exp_data)[[\"pathway_scores\"]] <- pathway_scores  collections <- pathway_collections |>    paste(collapse = \"_\") |>   stringr::str_remove(\"\\\\:\")  plot_pathway_heatmap(exp_data, annotations = plot_annotations,                     fwidth = 9,                     fname = stringr::str_glue(                       \"results/pathways/hm_paths_{collections}_top20.pdf\")                     ) ## Warning in prep_scores_hm(exp_data, pathway_scores, pathways): 'sample_id' ## already exists in colData and will be overwritten. write.csv(pathways, file = stringr::str_glue(\"results/pathways/paths_{collections}.csv\"))"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"microenvironment-scores","dir":"Articles","previous_headings":"","what":"Microenvironment scores","title":"Unsupervised RNA-seq analysis","text":"step calculates immune stromal cell type abundances using MCPcounter mMCPcounter. helps infer composition tumor microenvironment similar contexts.","code":"mcp_scores <- mcp_counter(exp_data, species = species) S4Vectors::metadata(exp_data)[[\"microenv_scores\"]] <- mcp_scores  plot_microenv_heatmap(exp_data, annotations = c(\"dex\", \"exp_cluster\"),                       fname = \"results/tme/heatSmap_mcpcounter.pdf\") ## Warning in prep_scores_hm(exp_data, microenv_scores): 'sample_id' already ## exists in colData and will be overwritten. write.csv(mcp_scores, file = \"results/tme/scores_mcpcounter.csv\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"targeted-plots","dir":"Articles","previous_headings":"","what":"Targeted plots","title":"Unsupervised RNA-seq analysis","text":"section focuses visualizing specific genes pathways interest, specified parameters.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"heatmaps","dir":"Articles","previous_headings":"Targeted plots","what":"Heatmaps","title":"Unsupervised RNA-seq analysis","text":"Generates heatmaps pre-selected genes interest observe expression across samples conditions.","code":"hms <- lapply(1:length(heatmap_genes), function(i) {   gene_annot <- SummarizedExperiment::rowData(exp_data)   genes <- heatmap_genes[[i]]   name <- ifelse(is.null(names(heatmap_genes)), i, names(heatmap_genes)[i])   plot_exp_heatmap(exp_data, genes = genes,                     annotations = plot_annotations,                    fname = stringr::str_glue(\"results/targeted/hm_genes_{i}.pdf\")) }) patchwork::wrap_plots(hms, ncol = 2, guides = \"collect\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"selected-pathways","dir":"Articles","previous_headings":"Targeted plots > Heatmaps","what":"Selected pathways","title":"Unsupervised RNA-seq analysis","text":"","code":"valid_pathways <- intersect(heatmap_pathways, rownames(pathway_scores))  plot_pathway_heatmap(exp_data,                       annotations = plot_annotations,                       pathways = valid_pathways,                      fname = stringr::str_glue(\"results/targeted/hm_pathways_selected.pdf\")) ## Warning in prep_scores_hm(exp_data, pathway_scores, pathways): 'sample_id' ## already exists in colData and will be overwritten."},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"boxplots","dir":"Articles","previous_headings":"Targeted plots","what":"Boxplots","title":"Unsupervised RNA-seq analysis","text":"Boxplots provide clear comparison expression levels across experimental groups conditions. jobs still running 10:00 Friday killed part maintenance. #### Selected genes","code":"genes <- boxplot_genes annotations <- plot_annotations  boxplots <- lapply(genes, function(gene) {   lapply(annotations, function(annotation) {     plt <- plot_exp_boxplot(exp_data, gene = gene,                     annotation = annotation,                     color_var = annotation,                     pt_size = 2,                    fname = stringr::str_glue(\"results/targeted/boxplots/box_{gene}_{annotation}.pdf\"))   }) }) |> purrr::flatten() patchwork::wrap_plots(boxplots, nrows = round(length(boxplots)/2), guides = \"collect\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"selected-pathways-1","dir":"Articles","previous_headings":"Targeted plots > Boxplots","what":"Selected pathways","title":"Unsupervised RNA-seq analysis","text":"","code":"paths <- boxplot_pathways annotations <- plot_annotations  boxplots <- lapply(paths, function(path) {   lapply(annotations, function(annotation) {     plt <- plot_path_boxplot(exp_data,                               pathway = path,                    annotation = annotation,                     color_var = annotation,                     pt_size = 2,                    fname = stringr::str_glue(\"results/targeted/boxplots/box_{path}_{annotation}.pdf\"))   }) }) |> purrr::flatten() patchwork::wrap_plots(boxplots, nrows = round(length(boxplots)/2), guides = \"collect\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"correlations","dir":"Articles","previous_headings":"Targeted plots","what":"Correlations","title":"Unsupervised RNA-seq analysis","text":"section visualizes relationships pairs genes pathways plotting expression/activity correlations. Correlation analysis can reveal important co-regulation interaction patterns, helping uncover biologically meaningful relationships.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"selected-genes","dir":"Articles","previous_headings":"Targeted plots > Correlations","what":"Selected genes","title":"Unsupervised RNA-seq analysis","text":"plot correlation selected gene pairs across dataset. pair plotted separately, color-coded sample annotation.","code":"gene_pairs <- correlation_genes annotations <- plot_annotations  cor_plts <- lapply(gene_pairs, function(gene_pair) {   lapply(annotations, function(annot) {       plot_exp_scatter(exp_data,                     gene1 = gene_pair[1],                    gene2 = gene_pair[2],                     color_var = annot,                    fname = stringr::str_glue(                      \"results/targeted/correlations/cor_{gene_pair[1]}_{gene_pair[2]}_color={annot}.pdf\"))   }) }) |> purrr::flatten() patchwork::wrap_plots(cor_plts, nrows = round(length(cor_plts)/2), guides = \"collect\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"selected-pathways-2","dir":"Articles","previous_headings":"Targeted plots > Correlations","what":"Selected pathways","title":"Unsupervised RNA-seq analysis","text":"Correlation plots selected pathways can help identify similarities differences pathway activity patterns across samples. pathway pair plotted separately color-coded sample annotation illustrate trends within condition.","code":"path_pairs <-correlation_pathways annotations <- plot_annotations  cor_plts <- lapply(path_pairs, function(path_pair) {   lapply(annotations, function(annot) {       plot_path_scatter(exp_data,                     pathway1 = path_pair[1],                    pathway2 = path_pair[2],## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was                     color_var = annot,                    fname = stringr::str_glue(                      \"results/targeted/correlations/cor_{path_pair[1]}_{path_pair[2]}_color={annot}.pdf\"))   }) }) |> purrr::flatten() patchwork::wrap_plots(cor_plts, nrows = round(length(cor_plts)/2), guides = \"collect\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"cluster-using-metadata","dir":"Articles","previous_headings":"","what":"Cluster using metadata","title":"Unsupervised RNA-seq analysis","text":"","code":"types = names(metadata_clusters)  for(type in types) {   exp_data <- cluster_metadata(exp_data,                     metadata_name = type,                     k = metadata_clusters[[type]]$k,                     features = metadata_clusters[[type]]$features,                    n_pcs = 3 ) }"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"save-summarizedexperiment","dir":"Articles","previous_headings":"","what":"Save SummarizedExperiment","title":"Unsupervised RNA-seq analysis","text":"final step saves processed dataset results. ensures outputs can revisited shared analysis.","code":"saveRDS(exp_data, file = stringr::str_glue(\"results/data_SummarizedExp_{lubridate::today()}.RDS\"))"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"report-parameters","dir":"Articles","previous_headings":"","what":"Report parameters","title":"Unsupervised RNA-seq analysis","text":"reproducibility, parameters used analysis computational environment details documented.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/articles/unsup_rnaseq.html","id":"sessioninfo","dir":"Articles","previous_headings":"Report parameters","what":"sessionInfo","title":"Unsupervised RNA-seq analysis","text":"sessionInfo() prints packages loaded time analysis, well versions.","code":"sessionInfo() ## R version 4.5.0 (2025-04-11) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 24.04.2 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.12.0  ## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.12.0  LAPACK version 3.12.0 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: Europe/Paris ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] kableExtra_1.4.0            dplyr_1.1.4                 ##  [3] msigdbr_10.0.2              factoextra_1.0.7            ##  [5] ggplot2_3.5.2               biomaRt_2.64.0              ##  [7] CAIBIrnaseq_1.0.0           R.utils_2.13.0              ##  [9] R.oo_1.27.1                 R.methodsS3_1.8.2           ## [11] airway_1.28.0               SummarizedExperiment_1.38.1 ## [13] Biobase_2.68.0              GenomicRanges_1.60.0        ## [15] GenomeInfoDb_1.44.0         IRanges_2.42.0              ## [17] S4Vectors_0.46.0            BiocGenerics_0.54.0         ## [19] generics_0.1.3              MatrixGenerics_1.20.0       ## [21] matrixStats_1.5.0           ##  ## loaded via a namespace (and not attached): ##   [1] ggplotify_0.1.2             filelock_1.0.3              ##   [3] tibble_3.2.1                graph_1.86.0                ##   [5] XML_3.99-0.18               lifecycle_1.0.4             ##   [7] httr2_1.1.2                 rstatix_0.7.2               ##   [9] lattice_0.22-5              crosstalk_1.2.1             ##  [11] backports_1.5.0             magrittr_2.0.3              ##  [13] plotly_4.10.4               sass_0.4.10                 ##  [15] rmarkdown_2.29              jquerylib_0.1.4             ##  [17] yaml_2.3.10                 rlist_0.4.6.2               ##  [19] cowplot_1.1.3               DBI_1.2.3                   ##  [21] RColorBrewer_1.1-3          lubridate_1.9.4             ##  [23] abind_1.4-8                 purrr_1.0.4                 ##  [25] yulab.utils_0.2.0           rappdirs_0.3.3              ##  [27] GenomeInfoDbData_1.2.14     ggrepel_0.9.6               ##  [29] irlba_2.3.5.1               tidytree_0.4.6              ##  [31] GSVA_2.2.0                  MCPcounter_1.2.0            ##  [33] annotate_1.86.0             svglite_2.1.3               ##  [35] pkgdown_2.1.2               codetools_0.2-20            ##  [37] DelayedArray_0.34.1         xml2_1.3.8                  ##  [39] tidyselect_1.2.1            aplot_0.2.5                 ##  [41] UCSC.utils_1.4.0            farver_2.1.2                ##  [43] ScaledMatrix_1.16.0         BiocFileCache_2.16.0        ##  [45] jsonlite_2.0.0              Formula_1.2-5               ##  [47] systemfonts_1.2.3           tools_4.5.0                 ##  [49] progress_1.2.3              treeio_1.32.0               ##  [51] ragg_1.4.0                  Rcpp_1.0.14                 ##  [53] glue_1.8.0                  gridExtra_2.3               ##  [55] SparseArray_1.8.0           xfun_0.52                   ##  [57] DESeq2_1.48.0               HDF5Array_1.36.0            ##  [59] withr_3.0.2                 fastmap_1.2.0               ##  [61] rhdf5filters_1.20.0         digest_0.6.37               ##  [63] rsvd_1.0.5                  timechange_0.3.0            ##  [65] R6_2.6.1                    gridGraphics_0.5-1          ##  [67] textshaping_1.0.1           RSQLite_2.3.10              ##  [69] h5mread_1.0.0               tidyr_1.3.1                 ##  [71] data.table_1.17.0           prettyunits_1.2.0           ##  [73] httr_1.4.7                  htmlwidgets_1.6.4           ##  [75] S4Arrays_1.8.0              pkgconfig_2.0.3             ##  [77] gtable_0.3.6                progeny_1.30.0              ##  [79] blob_1.2.4                  SingleCellExperiment_1.30.0 ##  [81] XVector_0.48.0              htmltools_0.5.8.1           ##  [83] carData_3.0-5               fgsea_1.34.0                ##  [85] msigdbdf_24.1.0             GSEABase_1.70.0             ##  [87] scales_1.4.0                tidyverse_2.0.0             ##  [89] png_0.1-8                   SpatialExperiment_1.18.0    ##  [91] ggfun_0.1.8                 knitr_1.50                  ##  [93] rstudioapi_0.17.1           tzdb_0.5.0                  ##  [95] reshape2_1.4.4              rjson_0.2.23                ##  [97] nlme_3.1-168                curl_6.2.2                  ##  [99] cachem_1.1.0                rhdf5_2.52.0                ## [101] stringr_1.5.1               parallel_4.5.0              ## [103] vipor_0.4.7                 AnnotationDbi_1.70.0        ## [105] desc_1.4.3                  pillar_1.10.2               ## [107] grid_4.5.0                  vctrs_0.6.5                 ## [109] ggpubr_0.6.0                BiocSingular_1.24.0         ## [111] car_3.1-3                   dbplyr_2.5.0                ## [113] beachmat_2.24.0             xtable_1.8-4                ## [115] beeswarm_0.4.0              evaluate_1.0.3              ## [117] readr_2.1.5                 magick_2.8.6                ## [119] cli_3.6.5                   locfit_1.5-9.12             ## [121] compiler_4.5.0              rlang_1.1.6                 ## [123] crayon_1.5.3                ggsignif_0.6.4.9000         ## [125] labeling_0.4.3              plyr_1.8.9                  ## [127] forcats_1.0.0               fs_1.6.6                    ## [129] ggbeeswarm_0.7.2            stringi_1.8.7               ## [131] viridisLite_0.4.2           BiocParallel_1.42.0         ## [133] assertthat_0.2.1            babelgene_22.9              ## [135] Biostrings_2.76.0           lazyeval_0.2.2              ## [137] ggheatmapper_0.2.1          Matrix_1.7-3                ## [139] hms_1.1.3                   patchwork_1.3.0             ## [141] sparseMatrixStats_1.20.0    bit64_4.6.0-1               ## [143] Rhdf5lib_1.30.0             KEGGREST_1.48.0             ## [145] broom_1.0.8                 memoise_2.0.1               ## [147] bslib_0.9.0                 ggtree_3.16.0               ## [149] fastmatch_1.1-6             bit_4.6.0                   ## [151] ape_5.8-1"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Salaün. Contributor. Clarice Groeneveld. Maintainer. Chloe Witz. Author.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Witz C (2025). CAIBIrnaseq: Supervised Unsupervised RNAseq(bulk) Analysis. R package version 1.0.0, https://crcordeliers.github.io/CAIBIrnaseq.","code":"@Manual{,   title = {CAIBIrnaseq: Supervised and Unsupervised RNAseq(bulk) Analysis},   author = {Chloe Witz},   year = {2025},   note = {R package version 1.0.0},   url = {https://crcordeliers.github.io/CAIBIrnaseq}, }"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/index.html","id":"id_-welcome-to-caibirnaseq","dir":"","previous_headings":"","what":"🎯 Welcome to CAIBIrnaseq","title":"CAIBIrnaseq","text":"CAIBIrnaseq R package designed streamline, standardize, reproduce key steps gene expression analysis RNA-seq data. Developed CAIBI platform team, integrates powerful tools : Preprocessing raw expression data (TPM calculation, filtering, normalization, etc.) Exploratory data analysis (PCA, clustering, heatmaps) Differential expression analysis (DESeq2 visualization DE genes) Functional pathway analysis (FGSEA, ORA, PROGENy scoring) Tumor microenvironment investigation (MCPcounter, cell-type signatures)","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/index.html","id":"quick-installation","dir":"","previous_headings":"","what":"Quick Installation","title":"CAIBIrnaseq","text":"RStudio, try running command lines : problems, informations installation available package website : https://crcordeliers.github.io/CAIBIrnaseq/ hope help projects !!!","code":"# If not already installed install.packages(\"devtools\") install.packages(\"BiocManager\")  # Installation from Github : devtools::install_github(\"crcordeliers/CAIBIrnaseq\", dependencies = TRUE)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/cluster_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster Samples Based on Gene Expression — cluster_exp","title":"Cluster Samples Based on Gene Expression — cluster_exp","text":"function performs hierarchical clustering samples using normalized gene expression data.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/cluster_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster Samples Based on Gene Expression — cluster_exp","text":"","code":"cluster_exp(   exp_data,   k,   genes = NULL,   pca = TRUE,   n_pcs = 10,   dist_method = \"euclidean\",   hc_method = \"complete\" )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/cluster_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster Samples Based on Gene Expression — cluster_exp","text":"exp_data `SummarizedExperiment` object containing normalized expression data matrix. k integer specifying number clusters generate. genes character vector gene names used clustering. `NULL`, top 2000 highly variable genes selected automatically. pca Logical. `TRUE`, principal component analysis (PCA) performed reduce dimensionality clustering. Default `TRUE`. n_pcs integer specifying number principal components retain `pca = TRUE`. Default 10. dist_method character string specifying distance metric use. Can one `\"euclidean\"`, `\"manhattan\"`, `\"pearson\"`, `\"spearman\"`. Default `\"euclidean\"`. hc_method character string specifying agglomeration method hierarchical clustering. Default `\"complete\"`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/cluster_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster Samples Based on Gene Expression — cluster_exp","text":"`SummarizedExperiment` object updated column `colData`, named `\"exp_cluster\"`, containing cluster assignments factor.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/cluster_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster Samples Based on Gene Expression — cluster_exp","text":"specific genes provided, function automatically selects top 2000 highly variable genes clustering. Optionally, PCA can applied reduce dimensionality, can useful datasets large number genes.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/cluster_k_hc.html","id":null,"dir":"Reference","previous_headings":"","what":"Hierarchical Clustering with Optional PCA Dimensionality Reduction — cluster_k_hc","title":"Hierarchical Clustering with Optional PCA Dimensionality Reduction — cluster_k_hc","text":"function performs hierarchical clustering input data matrix, optionally reducing dimensionality PCA first. Supports different distance linkage methods.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/cluster_k_hc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hierarchical Clustering with Optional PCA Dimensionality Reduction — cluster_k_hc","text":"","code":"cluster_k_hc(   data,   k,   pca = TRUE,   n_pcs = 10,   dist_method = \"euclidean\",   hc_method = \"complete\" )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/cluster_k_hc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hierarchical Clustering with Optional PCA Dimensionality Reduction — cluster_k_hc","text":"data numeric matrix data frame (features x samples). Rows features (e.g., genes), columns samples. k Integer. number clusters cut hierarchical tree . Must positive integer. pca Logical. TRUE (default), perform PCA clustering. n_pcs Integer. Number principal components use `pca = TRUE`. Default 10. Must positive integer. dist_method Distance method use: \"euclidean\" (default), \"pearson\", \"spearman\", etc. one supported methods. hc_method Linkage method hierarchical clustering. Default \"complete\". one supported methods.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/cluster_k_hc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hierarchical Clustering with Optional PCA Dimensionality Reduction — cluster_k_hc","text":"named integer vector cluster assignments sample.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/cluster_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster Metadata in Expression Data — cluster_metadata","title":"Cluster Metadata in Expression Data — cluster_metadata","text":"function performs hierarchical clustering specified metadata scores within provided expression dataset. updates dataset's sample annotations clustering results.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/cluster_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster Metadata in Expression Data — cluster_metadata","text":"","code":"cluster_metadata(   exp_data,   k,   metadata_name = \"pathway_scores\",   pca = TRUE,   n_pcs = 10,   features = NULL,   dist_method = \"euclidean\",   hc_method = \"complete\" )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/cluster_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster Metadata in Expression Data — cluster_metadata","text":"exp_data SummarizedExperiment object containing expression data metadata. k integer specifying number clusters generate. metadata_name character string specifying name metadata variable use clustering. Defaults \"pathway_scores\". pca Logical. TRUE, principal component analysis (PCA) applied clustering. Defaults TRUE. n_pcs integer specifying number principal components retain PCA applied. Defaults 10. features character vector feature names use clustering. NULL, features used. Defaults NULL. dist_method character string specifying distance metric use hierarchical clustering. Defaults \"euclidean\". hc_method character string specifying hierarchical clustering linkage method. Defaults \"complete\".","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/cluster_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster Metadata in Expression Data — cluster_metadata","text":"SummarizedExperiment object updated sample annotations including clustering results \"path_cluster\" column.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/cluster_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster Metadata in Expression Data — cluster_metadata","text":"features provided, rows specified metadata used clustering.   PCA can applied reduce dimensionality clustering.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/diffExpAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis — diffExpAnalysis","title":"Differential Expression Analysis — diffExpAnalysis","text":"Performs differential expression analysis using DESeq2 given count matrix sample information.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/diffExpAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis — diffExpAnalysis","text":"","code":"diffExpAnalysis(   countData,   sampleInfo,   method = \"DESeq2\",   cutoff = 10,   annotation )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/diffExpAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis — diffExpAnalysis","text":"countData matrix data frame raw count data. Rows represent genes, columns represent samples. sampleInfo data frame containing sample metadata. Must include `condition` column specifying experimental conditions. method string specifying method differential expression analysis. Currently supports `\"DESeq2\"`. Default `\"DESeq2\"`. cutoff integer specifying minimum number counts required across samples gene included analysis. Default `10`. annotation ee","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/diffExpAnalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis — diffExpAnalysis","text":"data frame containing results differential expression analysis, including adjusted p-values, log fold changes, statistics.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/diffExpAnalysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis — diffExpAnalysis","text":"function performs differential expression analysis using DESeq2 package. filters genes low counts, estimates size factors normalization, performs DESeq2 analysis pipeline. Log fold-change shrinkage applied using `lfcShrink` function.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/estimateTPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Transcripts Per Million (TPM) — estimateTPM","title":"Estimate Transcripts Per Million (TPM) — estimateTPM","text":"function calculates TPM values raw expression counts gene lengths. TPM normalization method accounts sequencing depth gene length, allowing comparison gene expression levels within samples.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/estimateTPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Transcripts Per Million (TPM) — estimateTPM","text":"","code":"estimateTPM(exp, gene_lengths)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/estimateTPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Transcripts Per Million (TPM) — estimateTPM","text":"exp numeric matrix data frame raw expression counts. Rows represent genes, columns represent samples. gene_lengths numeric vector gene lengths (kilobases base pairs) corresponding rows exp. Must length number rows exp.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/estimateTPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Transcripts Per Million (TPM) — estimateTPM","text":"numeric matrix TPM-normalized expression values dimensions exp.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/filter_gexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Gene Expression Data — filter_gexp","title":"Filter Gene Expression Data — filter_gexp","text":"function filters genes `SummarizedExperiment` object based minimum expression thresholds.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/filter_gexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Gene Expression Data — filter_gexp","text":"","code":"filter_gexp(exp_data, min_nsamp = 1, min_counts = 10)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/filter_gexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Gene Expression Data — filter_gexp","text":"exp_data `SummarizedExperiment` object containing gene expression data `counts` assay. min_nsamp integer specifying minimum number samples gene must expression `min_counts` retained. Default 1. min_counts integer specifying minimum count threshold gene must `min_nsamp` samples retained. Default 10.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/filter_gexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Gene Expression Data — filter_gexp","text":"filtered `SummarizedExperiment` object containing genes meet specified criteria. Two new columns added `colData`: - `ncounts`: Total counts per sample. - `nfeats`: Number features (genes) detected per sample.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/filter_gexp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Gene Expression Data — filter_gexp","text":"function removes genes meet specified thresholds expression. adds sample-level metrics (`ncounts` `nfeats`) `colData` `SummarizedExperiment` object downstream analysis. filtering criteria : - gene must expression greater equal `min_counts` least `min_nsamp` samples.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/fixMarsExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix Excel-Corrupted Gene Names — fixMarsExcel","title":"Fix Excel-Corrupted Gene Names — fixMarsExcel","text":"function corrects gene names data frame automatically converted Excel date formats (e.g., \"03/01/01\") replaces original gene names.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/fixMarsExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix Excel-Corrupted Gene Names — fixMarsExcel","text":"","code":"fixMarsExcel(mat)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/fixMarsExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix Excel-Corrupted Gene Names — fixMarsExcel","text":"mat data frame containing `gene_name` column, possibly corrupted gene names.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/fixMarsExcel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix Excel-Corrupted Gene Names — fixMarsExcel","text":"data frame corrected `gene_name` entries.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/getEmptyRows.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Empty Rows in a Matrix — getEmptyRows","title":"Get Empty Rows in a Matrix — getEmptyRows","text":"function identifies rows matrix sum zero across specified set columns.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/getEmptyRows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Empty Rows in a Matrix — getEmptyRows","text":"","code":"getEmptyRows(matrix, colToCheck = 1:8)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/getEmptyRows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Empty Rows in a Matrix — getEmptyRows","text":"matrix numeric matrix rows represent observations columns represent variables. colToCheck integer vector specifying columns check zero sums. Default 1:8.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/getEmptyRows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Empty Rows in a Matrix — getEmptyRows","text":"integer vector row indices sum across specified columns zero.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_annotation_collection.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Annotation Collection — get_annotation_collection","title":"Get Annotation Collection — get_annotation_collection","text":"Retrieves gene sets specified collections given species using MSigDB database.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_annotation_collection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Annotation Collection — get_annotation_collection","text":"","code":"get_annotation_collection(collections, species = \"Homo sapiens\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_annotation_collection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Annotation Collection — get_annotation_collection","text":"collections character vector specifying names collections retrieve. Collections can include MSigDB subcategories \"HALLMARK\". species character string specifying species gene sets retrieved. Default `\"Homo sapiens\"`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_annotation_collection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Annotation Collection — get_annotation_collection","text":"data frame following columns: collection name collection. pathway pathway name. gene_id Ensembl gene ID. gene_symbol gene symbol. valid collections found, function returns `NULL`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_annotation_collection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Annotation Collection — get_annotation_collection","text":"function queries MSigDB database via `msigdbr` package collect gene sets specified collections species. collection found MSigDB subcategories, warning message displayed, collection skipped.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_exp_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract gene expression and sample annotations — get_exp_df","title":"Extract gene expression and sample annotations — get_exp_df","text":"function extracts expression data given list genes SummarizedExperiment object merges sample metadata.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_exp_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract gene expression and sample annotations — get_exp_df","text":"","code":"get_exp_df(exp_data, genes, assay = \"norm\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_exp_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract gene expression and sample annotations — get_exp_df","text":"exp_data `SummarizedExperiment` object. genes character vector gene names identifiers extract. assay character string specifying assay extract. Defaults `\"norm\"`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_exp_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract gene expression and sample annotations — get_exp_df","text":"data frame expression values sample annotations.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_pathway_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract pathway scores and metadata from a SummarizedExperiment — get_pathway_df","title":"Extract pathway scores and metadata from a SummarizedExperiment — get_pathway_df","text":"function extracts pathway activity scores specified pathways merges sample annotations SummarizedExperiment object.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_pathway_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract pathway scores and metadata from a SummarizedExperiment — get_pathway_df","text":"","code":"get_pathway_df(exp_data, pathway_scores, pathways)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_pathway_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract pathway scores and metadata from a SummarizedExperiment — get_pathway_df","text":"exp_data `SummarizedExperiment` object containing sample metadata `colData`. pathway_scores matrix data frame pathway scores (rows = pathways, columns = samples). pathways character vector pathway names identifiers extract.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_pathway_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract pathway scores and metadata from a SummarizedExperiment — get_pathway_df","text":"data frame containing selected pathway scores sample annotations.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_pathway_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Pathway Genes — get_pathway_genes","title":"Get Pathway Genes — get_pathway_genes","text":"Extracts genes associated specific pathways annotation collection.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_pathway_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Pathway Genes — get_pathway_genes","text":"","code":"get_pathway_genes(   annotation_collection,   pathway_names,   annotation = \"gene_symbol\" )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_pathway_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Pathway Genes — get_pathway_genes","text":"annotation_collection data frame containing pathway annotations. least two columns: `pathway` gene annotation column (e.g., `gene_symbol` `gene_id`). pathway_names character vector specifying names pathways retrieve associated genes. annotation character string specifying column `annotation_collection` use gene annotations. Default `\"gene_symbol\"`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_pathway_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Pathway Genes — get_pathway_genes","text":"character vector genes associated specified pathways.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/get_pathway_genes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Pathway Genes — get_pathway_genes","text":"function filters provided annotation collection specified pathway names extracts corresponding genes based selected annotation column.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/gexp_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-process a gene expression matrix to have different gene annotation — gexp_preprocess","title":"Pre-process a gene expression matrix to have different gene annotation — gexp_preprocess","text":"Pre-process gene expression matrix different gene annotation","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/gexp_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-process a gene expression matrix to have different gene annotation — gexp_preprocess","text":"","code":"gexp_preprocess(   gexp,   gene_annotation = NULL,   keep_annot = \"gene_name\",   og_annot = \"gene_id\",   keep_stat = sum )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/gexp_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-process a gene expression matrix to have different gene annotation — gexp_preprocess","text":"gexp gene expression matrix, samples columns genes rows gene_annotation data.frame gene annotation, refering rows `gexp`. must contain least two columns: one `keep_annot` one `og_annot` keep_annot name column `gene_annotation` contains gene names like put rownames `gexp`, .e. kept annotation og_annot name column `gene_annotation` contains gene names currently used `gexp`, .e. original annotation. keep_stat function statistical measure used keeping gene `keep_annot` map uniquely `og_annot`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/gexp_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-process a gene expression matrix to have different gene annotation — gexp_preprocess","text":"processed gene expression matrix","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/highly_variable_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Highly Variable Genes — highly_variable_genes","title":"Identify Highly Variable Genes — highly_variable_genes","text":"function selects highly variable genes normalized gene expression matrix `SummarizedExperiment` object.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/highly_variable_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Highly Variable Genes — highly_variable_genes","text":"","code":"highly_variable_genes(gexp, n_hvg = 2000)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/highly_variable_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Highly Variable Genes — highly_variable_genes","text":"gexp normalized gene expression matrix (genes rows, samples columns), `SummarizedExperiment` object containing normalized counts `\"norm\"` assay. n_hvg integer specifying number highly variable genes select. Default `2000`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/highly_variable_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Highly Variable Genes — highly_variable_genes","text":"character vector containing names top `n_hvg` highly variable genes.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/highly_variable_genes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify Highly Variable Genes — highly_variable_genes","text":"function computes robust coefficient variation (CV) gene selects top `n_hvg` genes highest CV values. input `SummarizedExperiment` object, `\"norm\"` assay automatically extracted processing.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/mcp_counter.html","id":null,"dir":"Reference","previous_headings":"","what":"MCP-counter wrapper for SummarizedExperiment objects — mcp_counter","title":"MCP-counter wrapper for SummarizedExperiment objects — mcp_counter","text":"Estimates immune stromal cell populations using MCPcounter mMCPcounter.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/mcp_counter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCP-counter wrapper for SummarizedExperiment objects — mcp_counter","text":"","code":"mcp_counter(exp_data, species, feature_type = \"gene_name\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/mcp_counter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCP-counter wrapper for SummarizedExperiment objects — mcp_counter","text":"exp_data SummarizedExperiment object containing TPM expression data \"tpm\" assay. species Character. Either \"Homo sapiens\" \"Mus musculus\". feature_type Character. Either \"gene_name\" \"ensembl_gene_id\".","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/mcp_counter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MCP-counter wrapper for SummarizedExperiment objects — mcp_counter","text":"data.frame MCPcounter scores.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/normalize_gexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Gene Expression Data — normalize_gexp","title":"Normalize Gene Expression Data — normalize_gexp","text":"function normalizes gene expression counts `SummarizedExperiment` object using either `rlog` `vst` normalization, depending number samples.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/normalize_gexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Gene Expression Data — normalize_gexp","text":"","code":"normalize_gexp(exp_data)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/normalize_gexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Gene Expression Data — normalize_gexp","text":"exp_data `SummarizedExperiment` object containing gene expression data `counts` assay.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/normalize_gexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Gene Expression Data — normalize_gexp","text":"`SummarizedExperiment` object additional `norm` assay containing normalized expression data.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/normalize_gexp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalize Gene Expression Data — normalize_gexp","text":"function applies one two normalization methods: - `rlog` (regularized log transformation) used datasets fewer 30 samples. - `vst` (variance-stabilizing transformation) used datasets 30 samples. normalized data stored new assay named `\"norm\"`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pathwayAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Pathway Analysis — pathwayAnalysis","title":"Pathway Analysis — pathwayAnalysis","text":"Performs pathway enrichment analysis using either -representation Analysis (ORA) Gene Set Enrichment Analysis (FGSEA) based provided gene set pathways.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pathwayAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pathway Analysis — pathwayAnalysis","text":"","code":"pathwayAnalysis(   gene_set,   pathways,   method = \"ORA\",   species = \"Homo sapiens\",   id_col = \"gene_symbol\",   pcutoff = 0.05,   verbose = TRUE )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pathwayAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pathway Analysis — pathwayAnalysis","text":"gene_set data frame containing differential expression results. Rows represent genes. pathways data frame containing pathway information, columns pathways associated genes. method string specifying pathway analysis method. Options `\"ORA\"` -representation Analysis `\"FGSEA\"` Gene Set Enrichment Analysis. Default `\"ORA\"`. species string specifying species pathways relevant. Default `\"Homo sapiens\"`. id_col string specifying column `pathways` data frame contains gene identifiers. Default `\"gene_symbol\"`. pcutoff numeric value specifying adjusted p-value cutoff significant pathways. Default `0.05`. verbose logical value indicating whether display progress messages. Default `TRUE`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pathwayAnalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pathway Analysis — pathwayAnalysis","text":"data frame containing pathway enrichment results, including pathway names, p-values, adjusted p-values, relevant statistics.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pathwayAnalysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pathway Analysis — pathwayAnalysis","text":"function allows users perform pathway enrichment analysis using either ORA FGSEA. `pathways` input include column specifying gene identifiers column specifying pathway names. - **ORA**: Identifies pathways -represented provided gene set. - **FGSEA**: Identifies pathways using ranked list genes based differential expression statistics. function dynamically calls internal implementations ORA FGSEA based `method` argument.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pathwayFGSEA.html","id":null,"dir":"Reference","previous_headings":"","what":"Pathway Enrichment Using FGSEA — pathwayFGSEA","title":"Pathway Enrichment Using FGSEA — pathwayFGSEA","text":"Performs fast gene set enrichment analysis (FGSEA) using `fgseaMultilevel` method, based ranked list differentially expressed genes collection pathways.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pathwayFGSEA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pathway Enrichment Using FGSEA — pathwayFGSEA","text":"","code":"pathwayFGSEA(diffexp, pathwayCollection)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pathwayFGSEA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pathway Enrichment Using FGSEA — pathwayFGSEA","text":"diffexp data frame differential expression results, row names gene IDs `log2FoldChange` column used ranking genes. pathwayCollection data frame least two columns: one pathway names (`pathway`) one gene symbols (`gene_symbol`).","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pathwayFGSEA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pathway Enrichment Using FGSEA — pathwayFGSEA","text":"data frame returned `fgseaMultilevel()`, including columns : pathway Name pathway pval P-value enrichment padj Adjusted p-value (FDR) ES Enrichment Score NES Normalized Enrichment Score leadingEdge Vector leading-edge genes","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pathwayORA.html","id":null,"dir":"Reference","previous_headings":"","what":"Pathway Over-Representation Analysis (ORA) — pathwayORA","title":"Pathway Over-Representation Analysis (ORA) — pathwayORA","text":"Performs -representation analysis (ORA) using Fisher's exact test list differentially expressed genes set predefined pathways.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pathwayORA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pathway Over-Representation Analysis (ORA) — pathwayORA","text":"","code":"pathwayORA(diffexp_result, pathways, id_col = \"gene_symbol\", pcutoff = 0.05)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pathwayORA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pathway Over-Representation Analysis (ORA) — pathwayORA","text":"diffexp_result data frame differential expression results, row names correspond gene identifiers. pathways data frame least two columns: one indicating pathway names (e.g., 'pathway') one gene identifiers. id_col Character. column name `pathways` matches gene identifiers `diffexp_result`. pcutoff Numeric. Adjusted p-value threshold filter significant pathways (default = 0.05).","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pathwayORA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pathway Over-Representation Analysis (ORA) — pathwayORA","text":"data frame enriched pathways columns: Pathway Name enriched pathway PValue Raw p-value Fisher's exact test PAdj Adjusted p-value (Benjamini-Hochberg) GeneRatio Proportion input genes found pathway BgRatio Proportion background genes found pathway Genes Comma-separated list matched genes","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pca_gexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PCA on Gene Expression Data — pca_gexp","title":"Perform PCA on Gene Expression Data — pca_gexp","text":"function performs principal component analysis (PCA) gene expression data `SummarizedExperiment` object.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pca_gexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PCA on Gene Expression Data — pca_gexp","text":"","code":"pca_gexp(   exp_data,   assay = \"norm\",   filter = TRUE,   n_hvg = 2000,   center = TRUE,   scale = TRUE )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pca_gexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PCA on Gene Expression Data — pca_gexp","text":"exp_data `SummarizedExperiment` object containing gene expression data. assay character string specifying assay use PCA. Default `\"norm\"`. filter Logical. `TRUE`, PCA performed top `n_hvg` highly variable genes. `FALSE`, PCA performed genes. Default `TRUE`. n_hvg integer specifying number highly variable genes use `filter = TRUE`. Default 2000. center Logical. `TRUE`, variables centered PCA. Default `TRUE`. scale Logical. `TRUE`, variables scaled unit variance PCA. Default `TRUE`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pca_gexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PCA on Gene Expression Data — pca_gexp","text":"`prcomp` object containing PCA results.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/pca_gexp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PCA on Gene Expression Data — pca_gexp","text":"`filter = TRUE`, function identifies top `n_hvg` highly variable genes using robust coefficient variation performs PCA genes. Otherwise, PCA performed genes selected assay. `prcomp` function used PCA, options center scale data analysis.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Expression Boxplot (with validation) — plot_exp_boxplot","title":"Plot Expression Boxplot (with validation) — plot_exp_boxplot","text":"function generates boxplot expression specified gene, grouped given annotation.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Expression Boxplot (with validation) — plot_exp_boxplot","text":"","code":"plot_exp_boxplot(   exp_data,   gene,   annotation,   color_var = NA,   pt_size = 1,   summary_type = c(\"choose\", \"line\", \"box\")[1],   stat_comparisons = NA,   stat_format = NULL,   fname = NULL,   fwidth = 5,   fheight = 3 )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Expression Boxplot (with validation) — plot_exp_boxplot","text":"exp_data data object containing expression data. gene character string specifying gene expression plotted. annotation character string specifying grouping variable boxplot. color_var Optional. character string specifying variable color points. Defaults NA. pt_size Numeric. size points boxplot. Defaults 1. summary_type character string specifying type summary display (\"choose\", \"line\", \"box\"). Defaults \"choose\". stat_comparisons Optional. Statistical comparisons displayed plot. Defaults NA. stat_format Optional. format statistical annotations. Defaults NULL. fname Optional. character string specifying file name save plot. Defaults NULL. fwidth Numeric. width saved plot file. Defaults 5. fheight Numeric. height saved plot file. Defaults 3.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Expression Boxplot (with validation) — plot_exp_boxplot","text":"ggplot object representing boxplot.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Expression Heatmap — plot_exp_heatmap","title":"Plot Expression Heatmap — plot_exp_heatmap","text":"Generate heatmap gene expression data `SummarizedExperiment` object, optional sample annotations custom styling.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Expression Heatmap — plot_exp_heatmap","text":"","code":"plot_exp_heatmap(   expData,   genes,   annotations = NA,   assay = \"norm\",   gene_name = \"gene_name\",   annotation_prop = 0.1,   annotation_colors = NULL,   fname = NULL,   fwidth = 7,   fheight = 5,   ... )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Expression Heatmap — plot_exp_heatmap","text":"expData `SummarizedExperiment` object containing gene expression data. genes character vector gene identifiers (e.g., `gene_name`) include heatmap. annotations character vector column names `colData` `expData` use sample annotations heatmap. Default `NA` (annotations). assay character string specifying assay use `expData`. Default `\"norm\"`. gene_name character string specifying gene identifier column `rowData(expData)`. Default `\"gene_name\"`. annotation_prop numeric value specifying proportion heatmap height/width allocated annotation tracks. Default `0.1`. annotation_colors named list colors annotation tracks. Default `NULL` (automatic coloring). fname character string specifying file name saving heatmap. Default `NULL` (file saved). fwidth Numeric, width saved plot inches. Default `7`. fheight Numeric, height saved plot inches. Default `5`. ... Additional arguments passed underlying heatmap plotting functions.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Expression Heatmap — plot_exp_heatmap","text":"`ggplot` object representing heatmap.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Expression Scatter Plot — plot_exp_scatter","title":"Plot Expression Scatter Plot — plot_exp_scatter","text":"Creates scatter plot visualize expression relationship two genes, optional coloring variable.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Expression Scatter Plot — plot_exp_scatter","text":"","code":"plot_exp_scatter(   exp_data,   gene1,   gene2,   color_var = NA,   pt_size = 2,   fname = NULL,   fwidth = 5,   fheight = 3 )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Expression Scatter Plot — plot_exp_scatter","text":"exp_data `SummarizedExperiment` object containing gene expression data assays slot. gene1 character string specifying first gene x-axis. gene2 character string specifying second gene y-axis. color_var character string specifying column `colData(exp_data)` use coloring points. Default `NA` (coloring). pt_size Numeric; size points scatter plot. Default `2`. fname character string specifying file name save plot. Default `NULL` (save). fwidth Numeric; width saved plot inches. Default `5`. fheight Numeric; height saved plot inches. Default `3`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Expression Scatter Plot — plot_exp_scatter","text":"ggplot object representing scatter plot.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Volcano Plot of Differential Expression Results — plot_exp_volcano","title":"Plot Volcano Plot of Differential Expression Results — plot_exp_volcano","text":"Generates volcano plot based results differential expression analysis, highlighting upregulated downregulated genes, labels top significant genes.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Volcano Plot of Differential Expression Results — plot_exp_volcano","text":"","code":"plot_exp_volcano(diffexp, title = \"Volcano Plot of Differential Expression\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Volcano Plot of Differential Expression Results — plot_exp_volcano","text":"diffexp data frame containing differential expression results. Must include: - `log2FoldChange`: log2 fold change values gene. - `padj`: adjusted p-value gene.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_exp_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Volcano Plot of Differential Expression Results — plot_exp_volcano","text":"`ggplot` object representing volcano plot.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_microenv_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Microenvironment Heatmap — plot_microenv_heatmap","title":"Plot Microenvironment Heatmap — plot_microenv_heatmap","text":"function generates heatmap microenvironment population scores, optional sample annotations.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_microenv_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Microenvironment Heatmap — plot_microenv_heatmap","text":"","code":"plot_microenv_heatmap(   exp_data,   annotations = NA,   annotation_prop = 0.1,   annotation_colors = NULL,   fname = NULL,   fwidth = 7,   fheight = 5,   ... )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_microenv_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Microenvironment Heatmap — plot_microenv_heatmap","text":"exp_data SummarizedExperiment object containing microenvironment population scores metadata. annotations Optional. Sample annotations include heatmap. Defaults NA. annotation_prop numeric value specifying proportion heatmap allocated annotations. Defaults 0.1. annotation_colors Optional. list colors annotations. Defaults NULL. fname Optional. character string specifying file name save heatmap. Defaults NULL. fwidth Numeric. width saved heatmap file. Defaults 7. fheight Numeric. height saved heatmap file. Defaults 5. ... Additional parameters passed heatmap plotting function.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_microenv_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Microenvironment Heatmap — plot_microenv_heatmap","text":"heatmap plot object.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_path_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Pathway Boxplot — plot_path_boxplot","title":"Plot Pathway Boxplot — plot_path_boxplot","text":"Creates boxplot visualize pathway scores across annotations, optional statistical comparisons customization.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_path_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Pathway Boxplot — plot_path_boxplot","text":"","code":"plot_path_boxplot(   exp_data,   pathway,   annotation,   color_var = NA,   pt_size = 1,   summary_type = c(\"choose\", \"line\", \"box\")[1],   stat_comparisons = NA,   stat_format = NULL,   fname = NULL,   fwidth = 5,   fheight = 3 )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_path_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Pathway Boxplot — plot_path_boxplot","text":"exp_data `SummarizedExperiment` object containing pathway scores `metadata(exp_data)[[\"pathway_scores\"]]` slot. pathway character string specifying name pathway plot. annotation character string specifying column `colData(exp_data)` use grouping samples plot. color_var character string specifying column `colData(exp_data)` use coloring plot. Default `NA` (coloring). pt_size Numeric; size points plot. Default `1`. summary_type Character; type summary overlay plot. Options `\"choose\"` (default), `\"line\"`, `\"box\"`. stat_comparisons list character vectors specifying groups pairwise statistical comparisons. Default `NA` (statistical comparisons). stat_format character string specifying format displaying statistical results. Default `NULL` (formatting). fname character string specifying file name save plot. Default `NULL` (save). fwidth Numeric; width saved plot inches. Default `5`. fheight Numeric; height saved plot inches. Default `3`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_path_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Pathway Boxplot — plot_path_boxplot","text":"ggplot object representing boxplot.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_path_boxplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Pathway Boxplot — plot_path_boxplot","text":"function extracts pathway scores `metadata(exp_data)[[\"pathway_scores\"]]` slot merges sample annotations `colData(exp_data)`. generates boxplot using helper function `.plt_boxplot`. Statistical comparisons can added plot, plot can saved image file `fname` provided. `summary_type` argument determines type summary overlay: \"choose\" additional summary overlay. \"line\" Adds line connecting median group. \"box\" Adds summary box around group.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_path_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Pathway Scatter Plot — plot_path_scatter","title":"Plot Pathway Scatter Plot — plot_path_scatter","text":"Creates scatter plot comparing scores two pathways pathway scores stored metadata given dataset. Optionally saves plot file.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_path_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Pathway Scatter Plot — plot_path_scatter","text":"","code":"plot_path_scatter(   exp_data,   pathway1,   pathway2,   color_var = NA,   pt_size = 2,   fname = NULL,   fwidth = 5,   fheight = 3 )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_path_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Pathway Scatter Plot — plot_path_scatter","text":"exp_data object containing experimental data. Must include pathway scores `metadata(exp_data)[[\"pathway_scores\"]]`. pathway1 string specifying name first pathway comparison. pathway2 string specifying name second pathway comparison. color_var (Optional) variable used color points scatter plot. Default `NA`. pt_size numeric value specifying size points scatter plot. Default `2`. fname (Optional) string specifying file name save plot. `NULL`, plot saved. Default `NULL`. fwidth numeric value specifying width saved plot inches. Default `5`. fheight numeric value specifying height saved plot inches. Default `3`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_path_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Pathway Scatter Plot — plot_path_scatter","text":"`ggplot` object representing scatter plot.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_path_scatter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Pathway Scatter Plot — plot_path_scatter","text":"function extracts pathway scores metadata provided experimental data object, creates scatter plot comparing scores specified pathways. optional variable can used color points. file name provided, plot saved specified location.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_pathway_dotplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Pathway Analysis Results as a Dot Plot — plot_pathway_dotplot","title":"Plot Pathway Analysis Results as a Dot Plot — plot_pathway_dotplot","text":"Creates dot plot visualize pathway analysis results, supporting ORA FGSEA formats.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_pathway_dotplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Pathway Analysis Results as a Dot Plot — plot_pathway_dotplot","text":"","code":"plot_pathway_dotplot(   exp_data,   score_name = \"resultsORA\",   top_n = 10,   maxPval = 0.05 )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_pathway_dotplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Pathway Analysis Results as a Dot Plot — plot_pathway_dotplot","text":"exp_data `SummarizedExperiment` object containing experimental data pathway analysis results `metadata()`. score_name character string indicating metadata field results stored. Default `\"resultsORA\"`. top_n integer number top pathways plot. Default `10`. maxPval numeric maximum adjusted p-value include pathways. Default `0.05`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_pathway_dotplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Pathway Analysis Results as a Dot Plot — plot_pathway_dotplot","text":"`ggplot2` dot plot showing pathway enrichment results.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_pathway_dotplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Pathway Analysis Results as a Dot Plot — plot_pathway_dotplot","text":"function supports two result formats: - **ORA** (-Representation Analysis): expects columns `PAdj`, `GeneRatio`, `Pathway`. - **FGSEA**: expects columns `padj`, `size`, `pathway`. x-axis shows -log10 adjusted p-values, y-axis lists pathways, dot size shows gene ratio.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_pathway_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Pathway Heatmap — plot_pathway_heatmap","title":"Plot Pathway Heatmap — plot_pathway_heatmap","text":"function generates heatmap pathway scores, optional sample annotations.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_pathway_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Pathway Heatmap — plot_pathway_heatmap","text":"","code":"plot_pathway_heatmap(   pathway_scores,   pathways = 1:20,   annotations = NA,   annotation_prop = 0.1,   annotation_colors = NULL,   fname = NULL,   fwidth = 7,   fheight = 5,   ... )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_pathway_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Pathway Heatmap — plot_pathway_heatmap","text":"pathway_scores Either data frame pathway scores SummarizedExperiment object containing pathway scores metadata. pathways vector specifying pathways include heatmap. Defaults first 20 pathways. annotations Optional. Sample annotations include heatmap. Defaults NA. annotation_prop numeric value specifying proportion heatmap allocated annotations. Defaults 0.1. annotation_colors Optional. list colors annotations. Defaults NULL. fname Optional. character string specifying file name save heatmap. Defaults NULL. fwidth Numeric. width saved heatmap file. Defaults 7. fheight Numeric. height saved heatmap file. Defaults 5. ... Additional parameters passed heatmap plotting function.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_pathway_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Pathway Heatmap — plot_pathway_heatmap","text":"heatmap plot object.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PCA Results for Gene Expression Data — plot_pca","title":"Plot PCA Results for Gene Expression Data — plot_pca","text":"function generates PCA plot `SummarizedExperiment` object using precomputed PCA results.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PCA Results for Gene Expression Data — plot_pca","text":"","code":"plot_pca(   exp_data,   color = NA,   shape = NA,   fname = \"results/qc/plot_PCA.pdf\",   pcs = c(1, 2),   res_name = \"pca_res\",   id_name = \"sample_id\",   point_size = 2,   color_in = c(\"color\", \"fill\")[1],   out = c(\"plotly\", \"ggplot\")[1] )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PCA Results for Gene Expression Data — plot_pca","text":"exp_data `SummarizedExperiment` object containing gene expression data. PCA results must stored `exp_data@metadata` name specified `res_name`. color character string specifying column name `colData(exp_data)` use coloring points. Default `NA`, meaning coloring. shape character string specifying column name `colData(exp_data)` use shaping points. Default `NA`, meaning shaping. fname character string specifying file path save plot PDF. Default `\"results/qc/plot_PCA.pdf\"`. Set `NULL` skip saving. pcs integer vector length 2 specifying principal components plot x y axes. Default `c(1, 2)`. res_name character string specifying name PCA results stored `exp_data@metadata`. Default `\"pca_res\"`. id_name character string specifying column name `colData(exp_data)` containing sample identifiers. Default `\"sample_id\"`. point_size numeric value specifying size points plot. Default `2`. color_in character string indicating whether color aesthetic applied `\"color\"` (border) `\"fill\"` (interior). Default `\"color\"`. character string indicating output type: `\"plotly\"` (interactive Plotly plot) `\"ggplot\"` (static ggplot). Default `\"plotly\"`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot PCA Results for Gene Expression Data — plot_pca","text":"PCA plot, either `plotly` interactive object `ggplot` static object, depending `` parameter.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_pca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot PCA Results for Gene Expression Data — plot_pca","text":"function creates scatter plot specified principal components (`pcs[1]` `pcs[2]`). Users can optionally: - Color points based metadata column (`color`). - Shape points based metadata column (`shape`). - Save static plot PDF `fname` `NULL`. PCA results precomputed using `pca_gexp`, function throw error. proportion variance explained principal components displayed axis labels.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_progeny_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Progeny Heatmap — plot_progeny_heatmap","title":"Plot Progeny Heatmap — plot_progeny_heatmap","text":"Generates heatmap Progeny pathway scores, optional sample annotations customization options.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_progeny_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Progeny Heatmap — plot_progeny_heatmap","text":"","code":"plot_progeny_heatmap(   progeny_scores,   annotations = NA,   annotation_prop = 0.1,   annotation_colors = NULL,   fname = NULL,   fwidth = 7,   fheight = 5,   ... )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_progeny_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Progeny Heatmap — plot_progeny_heatmap","text":"progeny_scores data frame pathway scores `SummarizedExperiment` object containing pathway scores metadata. annotations (Optional) Annotations samples displayed tracks heatmap. Default `NA`, meaning annotations used. annotation_prop Proportion heatmap width allocated annotations, provided. Default `0.1`. annotation_colors (Optional) named list colors annotation tracks. Names must match annotation variables. fname (Optional) File name save heatmap image. `NULL`, heatmap displayed saved. Default `NULL`. fwidth Width saved heatmap image inches. Default `7`. fheight Height saved heatmap image inches. Default `5`. ... Additional arguments passed internal heatmap plotting function.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_progeny_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Progeny Heatmap — plot_progeny_heatmap","text":"heatmap object showing Progeny pathway scores.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_progeny_heatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Progeny Heatmap — plot_progeny_heatmap","text":"`progeny_scores` data frame, assumed contain pathway scores row names pathway names column names sample IDs. `SummarizedExperiment` object, pathway scores extracted metadata `progeny_scores`. Annotations can added heatmap provided, appearance can customized using `annotation_colors`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_qc_filters.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot QC Filters for Gene Expression Data — plot_qc_filters","title":"Plot QC Filters for Gene Expression Data — plot_qc_filters","text":"function creates quality control (QC) plot `SummarizedExperiment` object, highlighting samples pass fail specified QC thresholds.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_qc_filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot QC Filters for Gene Expression Data — plot_qc_filters","text":"","code":"plot_qc_filters(   gexp,   fname = \"results/qc/plot_QC_filters.pdf\",   min_nfeats = 5000,   min_ncounts = 5e+06,   out = c(\"plotly\", \"ggplot\")[1] )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_qc_filters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot QC Filters for Gene Expression Data — plot_qc_filters","text":"gexp `SummarizedExperiment` object containing gene expression data. `colData` must include `nfeats` (number detected features) `ncounts` (total counts per sample). fname character string specifying file path save plot PDF. Default `\"results/qc/plot_QC_filters.pdf\"`. Set `NULL` skip saving. min_nfeats integer specifying minimum number features sample pass QC. Default `5000`. min_ncounts numeric value specifying minimum total counts sample pass QC. Default `5e6`. character string indicating output type: `\"plotly\"` (interactive Plotly plot) `\"ggplot\"` (static ggplot). Default `\"plotly\"`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_qc_filters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot QC Filters for Gene Expression Data — plot_qc_filters","text":"QC plot, either `plotly` interactive object `ggplot` static object, depending `` parameter.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plot_qc_filters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot QC Filters for Gene Expression Data — plot_qc_filters","text":"function identifies samples fail QC based thresholds number detected features (`min_nfeats`) total counts (`min_ncounts`). creates scatter plot : - x-axis representing number features (`nfeats`). - y-axis representing total counts (`ncounts`). - Points color-coded based QC status (`pass` `fail`). - Dashed lines indicating QC thresholds. `= \"plotly\"`, plot interactive, allowing sample tooltips. file name (`fname`) provided, static ggplot saved PDF.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plt_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplot of gene expression by annotation group — plt_boxplot","title":"Boxplot of gene expression by annotation group — plt_boxplot","text":"Creates boxplot crossbar summary gene expression across sample annotations, optionally colored annotated statistical comparisons.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plt_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplot of gene expression by annotation group — plt_boxplot","text":"","code":"plt_boxplot(   exp_df,   gene,   annotation,   color_var,   pt_size,   summary_type,   stat_comparisons,   stat_format )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plt_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplot of gene expression by annotation group — plt_boxplot","text":"exp_df data frame, typically created `get_exp_df()`, containing gene expression metadata. gene character string specifying gene name plot y-axis. annotation character string specifying annotation variable (e.g., \"condition\") x-axis. color_var Optional character string specifying variable coloring points. Set `NA` disable. pt_size Numeric value size beeswarm points. summary_type Character string: either `\"box\"` boxplot `\"line\"` mean crossbar. stat_comparisons list comparison pairs `stat_compare_means()`. Set `NA` use default behavior. stat_format Character string label format used `stat_compare_means()` (e.g., `\"p.signif\"`).","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plt_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boxplot of gene expression by annotation group — plt_boxplot","text":"`ggplot2` object representing boxplot summary plot.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plt_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Heatmap with Optional Annotations and Customization — plt_heatmap","title":"Plot Heatmap with Optional Annotations and Customization — plt_heatmap","text":"function generates heatmap data frame matrix values, option include additional annotations customize various aspects plot fonts, track colors, size.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plt_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Heatmap with Optional Annotations and Customization — plt_heatmap","text":"","code":"plt_heatmap(   data4hm,   annotations = NA,   fontsize = 9,   track_colors = NULL,   track_prop = 0.1,   fname = NULL,   fwidth = 7,   fheight = 5,   ... )"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plt_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Heatmap with Optional Annotations and Customization — plt_heatmap","text":"data4hm list containing data heatmap several elements annotations data frame list annotations overlay heatmap. Default `NA`. fontsize font size text heatmap. Default 9. track_colors vector colors annotation tracks. Default `NULL`. track_prop Proportion heatmap's height allocated annotation tracks. Default 0.1. fname Optional. file name save heatmap plot . Default `NULL`. fwidth Width saved heatmap (inches). Default 7. fheight Height saved heatmap (inches). Default 5. ... Additional arguments pass `ggheatmap` function.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plt_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Heatmap with Optional Annotations and Customization — plt_heatmap","text":"`ggplot` object representing heatmap.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plt_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter plot of gene expression — plt_scatter","title":"Scatter plot of gene expression — plt_scatter","text":"Creates scatter plot expression two genes data frame, optionally colored variable.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plt_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter plot of gene expression — plt_scatter","text":"","code":"plt_scatter(exp_df, gene1, gene2, color_var, pt_size)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plt_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter plot of gene expression — plt_scatter","text":"exp_df data frame, typically created `get_exp_df()`, containing expression values metadata. gene1 character string representing first gene name (x-axis). gene2 character string representing second gene name (y-axis). color_var (Optional) character string naming variable used point coloring. Set `NA` coloring. pt_size Numeric. Size points plot.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/plt_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatter plot of gene expression — plt_scatter","text":"`ggplot2` object representing scatter plot optional coloring correlation statistics.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/prep_exp_hm.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Gene Expression Data for Heatmap Visualization — prep_exp_hm","title":"Prepare Gene Expression Data for Heatmap Visualization — prep_exp_hm","text":"function extracts formats gene expression data `SummarizedExperiment` object heatmap plotting. returns long-format data frame along identifiers samples features.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/prep_exp_hm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Gene Expression Data for Heatmap Visualization — prep_exp_hm","text":"","code":"prep_exp_hm(expData, genes, assay = \"norm\", gene_name = \"gene_name\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/prep_exp_hm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Gene Expression Data for Heatmap Visualization — prep_exp_hm","text":"expData `SummarizedExperiment` object. genes Character vector gene names IDs extract. assay Character. name assay use (default \"norm\"). gene_name Character. column name `rowData` containing gene names. Default \"gene_name\".","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/prep_exp_hm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Gene Expression Data for Heatmap Visualization — prep_exp_hm","text":"list containing: table data frame expression values sample annotations. colv Column variable use x-axis (typically sample IDs). rowv Row variable(s) corresponding genes.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/prep_scoredf_hm.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Pathway Scores Data Frame for Heatmap — prep_scoredf_hm","title":"Prepare Pathway Scores Data Frame for Heatmap — prep_scoredf_hm","text":"function prepares data frame pathway scores, transposed ready heatmap visualization. filters selects subset pathways, either name index.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/prep_scoredf_hm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Pathway Scores Data Frame for Heatmap — prep_scoredf_hm","text":"","code":"prep_scoredf_hm(pathway_scores, pathways = 1:20)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/prep_scoredf_hm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Pathway Scores Data Frame for Heatmap — prep_scoredf_hm","text":"pathway_scores matrix data frame pathway scores (rows = pathways, columns = samples). pathways Either numeric vector row indices character vector pathway names include. Default 1:20.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/prep_scoredf_hm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Pathway Scores Data Frame for Heatmap — prep_scoredf_hm","text":"list following elements: table data frame wide format (samples rows, pathways columns) `sample_id` row identifier. colv column name use sample ID (`\"sample_id\"`). rowv character vector selected pathway names.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/prep_scores_hm.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Pathway Scores for Heatmap Visualization — prep_scores_hm","title":"Prepare Pathway Scores for Heatmap Visualization — prep_scores_hm","text":"function prepares tidy table pathway scores joined sample annotations `SummarizedExperiment` object. returns list suitable heatmap plotting.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/prep_scores_hm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Pathway Scores for Heatmap Visualization — prep_scores_hm","text":"","code":"prep_scores_hm(exp_data, pathway_scores, pathways = 1:20)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/prep_scores_hm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Pathway Scores for Heatmap Visualization — prep_scores_hm","text":"exp_data `SummarizedExperiment` object containing sample annotations `colData`. pathway_scores matrix data frame pathway scores (rows = pathways, columns = samples). pathways Either numeric vector indicating indices pathways include, character vector pathway names. Default 1:20.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/prep_scores_hm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Pathway Scores for Heatmap Visualization — prep_scores_hm","text":"list containing: table data frame wide format pathway scores sample metadata. colv Column use identifier samples (usually `\"sample_id\"`). rowv character vector selected pathways.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/read_rnaseq_out.html","id":null,"dir":"Reference","previous_headings":"","what":"Read RNA-seq Output from nf-core/rnaseq — read_rnaseq_out","title":"Read RNA-seq Output from nf-core/rnaseq — read_rnaseq_out","text":"function loads formats `SummarizedExperiment` object nf-core/rnaseq output directory (e.g., generated using STAR + Salmon). sets TPM, log-transformed TPM, cleans sample annotations, adds basic QC metadata (number counts detected features).","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/read_rnaseq_out.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read RNA-seq Output from nf-core/rnaseq — read_rnaseq_out","text":"","code":"read_rnaseq_out(DATA_PATH)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/read_rnaseq_out.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read RNA-seq Output from nf-core/rnaseq — read_rnaseq_out","text":"DATA_PATH character string pointing path containing nf-core/rnaseq results.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/read_rnaseq_out.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read RNA-seq Output from nf-core/rnaseq — read_rnaseq_out","text":"`SummarizedExperiment` object assays annotations formatted.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/readsPerMillion.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Counts to Reads Per Million (RPM) — readsPerMillion","title":"Normalize Counts to Reads Per Million (RPM) — readsPerMillion","text":"function normalizes raw read counts Reads Per Million (RPM) across column (typically samples). commonly used comparing sequencing depth-normalized gene expression across samples.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/readsPerMillion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Counts to Reads Per Million (RPM) — readsPerMillion","text":"","code":"readsPerMillion(data, factor = 10^6)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/readsPerMillion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Counts to Reads Per Million (RPM) — readsPerMillion","text":"data numeric matrix data frame raw counts. Rows typically genes, columns samples. factor numeric value scaling. Default 10^6 compute reads per million.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/readsPerMillion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Counts to Reads Per Million (RPM) — readsPerMillion","text":"matrix dimensions data, RPM-normalized values.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/rebase_gexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Rebase Gene Expression Matrix — rebase_gexp","title":"Rebase Gene Expression Matrix — rebase_gexp","text":"function rebases gene expression matrix `SummarizedExperiment` object using specified annotation primary identifier.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/rebase_gexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rebase Gene Expression Matrix — rebase_gexp","text":"","code":"rebase_gexp(exp_data, annotation = \"gene_name\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/rebase_gexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rebase Gene Expression Matrix — rebase_gexp","text":"exp_data `SummarizedExperiment` object containing gene expression data. annotation character string specifying column gene annotation use main identifier. Default `\"gene_name\"`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/rebase_gexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rebase Gene Expression Matrix — rebase_gexp","text":"`SummarizedExperiment` object rebased gene expression data. output includes updated `rowData` summarized gene-level information, new `assays` containing rebased `counts` `tpm` matrices.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/rebase_gexp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rebase Gene Expression Matrix — rebase_gexp","text":"function rebases gene expression data aggregating counts based specified annotation. also calculates transcripts per million (TPM) using aggregated data associated gene lengths. function performs following steps: - Aggregates gene counts metadata based specified annotation. - Calculates TPM values using rebased gene counts average gene lengths. - Constructs new `SummarizedExperiment` object rebased data.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/robust_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust Coefficient of Variation — robust_cv","title":"Robust Coefficient of Variation — robust_cv","text":"function computes robust coefficient variation given vector. robust coefficient variation calculated median absolute deviation (MAD) divided median data, providing measure variability less sensitive outliers.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/robust_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust Coefficient of Variation — robust_cv","text":"","code":"robust_cv(v)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/robust_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robust Coefficient of Variation — robust_cv","text":"v numeric vector values robust coefficient variation calculated.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/robust_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robust Coefficient of Variation — robust_cv","text":"numeric value representing robust coefficient variation input vector.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/robust_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Robust Coefficient of Variation — robust_cv","text":"","code":"robust_cv(c(1, 2, 3, 4, 5)) #> [1] 0.4942 robust_cv(c(1, 1, 1, 1, 1)) #> [1] 0"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/score_pathways.html","id":null,"dir":"Reference","previous_headings":"","what":"Score Pathways — score_pathways","title":"Score Pathways — score_pathways","text":"Computes pathway scores given expression dataset using specified scoring methods.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/score_pathways.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score Pathways — score_pathways","text":"","code":"score_pathways(exp_data, pathways, scoring_method = \"gsva\", verbose = TRUE)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/score_pathways.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score Pathways — score_pathways","text":"exp_data `SummarizedExperiment` object containing normalized expression data `assays(exp_data)$norm` slot. pathways data frame pathway definitions, containing least two columns: `pathway` (pathway name) either `gene_id` (Ensembl IDs) `gene_symbol` (gene symbols). scoring_method character string specifying scoring method use. Options `\"gsva\"`, `\"ssgsea\"`, `\"plage\"`, `\"zscore\"`. Default `\"gsva\"`. verbose Logical; `TRUE`, prints progress messages computation. Default `TRUE`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/score_pathways.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score Pathways — score_pathways","text":"data frame pathway scores, pathways row names samples columns. Pathways sorted total score variation.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/score_pathways.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Score Pathways — score_pathways","text":"function identifies gene annotation used expression matrix (`gene_id` `gene_symbol`) matching row names `assays(exp_data)$norm` `pathways` data frame. splits pathways gene sets scores using specified method `GSVA` package. available scoring methods : `gsva` Gene Set Variation Analysis. `ssgsea` Single-sample Gene Set Enrichment Analysis. `plage` Pathway Level Analysis Gene Expression. `zscore` Z-score normalization. Pathway scores sorted sum absolute scores across samples, prioritizing pathways highest variation.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/score_progeny.html","id":null,"dir":"Reference","previous_headings":"","what":"Score PROGENy Pathways — score_progeny","title":"Score PROGENy Pathways — score_progeny","text":"Calculate PROGENy pathway activity scores based normalized gene expression data.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/score_progeny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score PROGENy Pathways — score_progeny","text":"","code":"score_progeny(exp_data, species = \"Homo sapiens\")"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/score_progeny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score PROGENy Pathways — score_progeny","text":"exp_data `SummarizedExperiment` object containing normalized gene expression data `assays(exp_data)$norm` slot. species character string specifying species, either `\"Homo sapiens\"` (default) `\"Mus musculus\"`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/score_progeny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score PROGENy Pathways — score_progeny","text":"data frame containing PROGENy pathway activity scores sample.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/score_progeny.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Score PROGENy Pathways — score_progeny","text":"function uses normalized gene expression data specified assay `SummarizedExperiment` object compute PROGENy scores. PROGENy scores represent pathway activity computed based predefined pathway models specified species.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/transcripts_per_million.html","id":null,"dir":"Reference","previous_headings":"","what":"Transcripts Per Million (TPM) Calculation — transcripts_per_million","title":"Transcripts Per Million (TPM) Calculation — transcripts_per_million","text":"function computes Transcripts Per Million (TPM) normalization gene expression data. counts normalized length gene scaled total counts per sample.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/transcripts_per_million.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transcripts Per Million (TPM) Calculation — transcripts_per_million","text":"","code":"transcripts_per_million(counts, gene_lengths)"},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/transcripts_per_million.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transcripts Per Million (TPM) Calculation — transcripts_per_million","text":"counts matrix gene expression counts (rows = genes, columns = samples). gene_lengths named vector gene lengths. names must match row names `counts`.","code":""},{"path":"https://crcordeliers.github.io/CAIBIrnaseq/reference/transcripts_per_million.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transcripts Per Million (TPM) Calculation — transcripts_per_million","text":"matrix TPM values (rows = genes, columns = samples).","code":""}]
